
* {
    margin: 0;
    padding: 0;
    /* 如何计算元素的总大小, border-box 设置的边框和内边距的值是包含在 width 内的 */
    box-sizing: border-box;
}

section {
    display: flex;
    /* 主轴对齐 */
    justify-content: center;
    /* 交叉轴对齐 */
    align-items: center;
    min-height: 100vh;
    background: #042104;
    /* 动画名 持续时间 Easing 动画迭代次数 */
    animation: animateBg 10s linear infinite;
}

@keyframes animateBg {
    0% {
        /* hue-rotate 旋转元素及其内容的色调。 */
        filter: hue-rotate(0deg);
    }
    100% {
        filter: hue-rotate(360deg);
    }
}

section .loader {
    position: relative;
    width: 120px;
    height: 120px;
}

section .loader span {
    /* 脱离文档流 */
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    /* 18*20=360 */
    transform: rotate(calc(18deg * var(--i)));
}

section .loader span::before {
    content: '';
    /* 脱离文档流 最近的定位祖先span作为锚点 */
    position: absolute;
    top: 0;
    left: 0;
    /* 画个点点 */
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background: #00ff0a;
    /*box-shadow: 0 0 10px #00ff0a;*/
    /* 多层阴影 */
    box-shadow: 0 0 10px #00ff0a,
                0 0 20px #00ff0a,
                0 0 40px #00ff0a,
                0 0 60px #00ff0a,
                0 0 80px #00ff0a,
                0 0 100px #00ff0a;
    /* 对每个点点放大缩小动画 */
    animation: animate 2s linear infinite;
    /* 0.1s * 20 = 2s */
    animation-delay: calc(0.1s * var(--i));
}

@keyframes animate {
    0% {
        transform: scale(1);
    }
    /* 控制80%-100%的点点不显示 */
    80%, 100% {
        transform: scale(0);
    }
}